# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Eogatt5W6Shed85zemx14EclljCfmo5B
"""

#Script scan common port over internet

import socket
import requests

#User define function to check open ports.

def check_port(target, ports):
  open_ports = [] #store the data in list which are open
  for port in ports: #loop through each port
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #creating a socket
    sock.settimeout(1)
    result = sock.connect_ex((target, port))
    if result == 0:
      open_ports.append(port)
    sock.close()
  return open_ports

#User define function to chedk the http status

def check_http_status(target):
    try:
        response = requests.get(f"http://{target}")
        return response.status_code
    except requests.exceptions.RequestException as e:
        return f"Error: {e}"

#User define target IPs
#Ports 137 and 139 (NetBIOS over TCP) and 445 (SMB)
#Port 22 (SSH)
#Port 53 (DNS)
#Port 25 (SMTP)
#Port 3389 (remote desktop)
#Ports 80, 443, 8080 and 8443 (HTTP and HTTPS)
#Ports 20 and 21 (FTP)
#Port 23 (Telnet)
#Ports 1433, 1434 and 3306 (used by databases)

target = input("Enter the target IP: ")
ports = [80, 443, 22, 21, 8080, 137, 53, 25, 3389, 20, 23, 1433, 1434, 3306] #common port

#Check open ports
open_ports = check_port(target, ports)
print(f"Open ports on {target}: {open_ports}")

#check HTTP status code
http_status = check_http_status(target)
print(f"HTTP status code on {target}: {http_status}")
